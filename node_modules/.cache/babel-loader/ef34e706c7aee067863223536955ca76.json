{"ast":null,"code":"import*as ActionTypes from'./ActionTypes';import{DISHES}from'../shared/dishes';import{baseUrl}from'../shared/baseUrl';export var addComment=function addComment(comment){return{type:ActionTypes.ADD_COMMENT,payload:comment};};export var postComment=function postComment(dishId,rating,author,comment){return function(dispatch){var newComment={dishId:dishId,rating:rating,author:author,comment:comment};newComment.date=new Date().toISOString();return fetch(baseUrl+'comments',{method:\"POST\",body:JSON.stringify(newComment),headers:{\"Content-Type\":\"application/json\"},credentials:\"same-origin\"}).then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){throw error;}).then(function(response){return response.json();}).then(function(response){return dispatch(addComment(response));}).catch(function(error){console.log('post comments',error.message);alert('Your comment could not be posted\\nError: '+error.message);});};};export var fetchDishes=function fetchDishes(){return function(dispatch){dispatch(dishesLoading(true));return fetch(baseUrl+'dishes').then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){var errmess=new Error(error.message);throw errmess;}).then(function(response){return response.json();}).then(function(dishes){return dispatch(addDishes(dishes));}).catch(function(error){return dispatch(dishesFailed(error.message));});};};export var dishesLoading=function dishesLoading(){return{type:ActionTypes.DISHES_LOADING};};export var dishesFailed=function dishesFailed(errmess){return{type:ActionTypes.DISHES_FAILED,payload:errmess};};export var addDishes=function addDishes(dishes){return{type:ActionTypes.ADD_DISHES,payload:dishes};};export var fetchComments=function fetchComments(){return function(dispatch){return fetch(baseUrl+'comments').then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){var errmess=new Error(error.message);throw errmess;}).then(function(response){return response.json();}).then(function(comments){return dispatch(addComments(comments));}).catch(function(error){return dispatch(commentsFailed(error.message));});};};export var commentsFailed=function commentsFailed(errmess){return{type:ActionTypes.COMMENTS_FAILED,payload:errmess};};export var addComments=function addComments(comments){return{type:ActionTypes.ADD_COMMENTS,payload:comments};};export var fetchPromos=function fetchPromos(){return function(dispatch){dispatch(promosLoading());return fetch(baseUrl+'promotions').then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){var errmess=new Error(error.message);throw errmess;}).then(function(response){return response.json();}).then(function(promos){return dispatch(addPromos(promos));}).catch(function(error){return dispatch(promosFailed(error.message));});};};export var promosLoading=function promosLoading(){return{type:ActionTypes.PROMOS_LOADING};};export var promosFailed=function promosFailed(errmess){return{type:ActionTypes.PROMOS_FAILED,payload:errmess};};export var addPromos=function addPromos(promos){return{type:ActionTypes.ADD_PROMOS,payload:promos};};","map":{"version":3,"sources":["C:/Users/ALI COMPUTER CENTER/Desktop/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","DISHES","baseUrl","addComment","comment","type","ADD_COMMENT","payload","postComment","dishId","rating","author","dispatch","newComment","date","Date","toISOString","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","console","log","message","alert","fetchDishes","dishesLoading","errmess","dishes","addDishes","dishesFailed","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\nimport { DISHES } from '../shared/dishes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n"]},"metadata":{},"sourceType":"module"}